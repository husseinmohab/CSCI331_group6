--Proposition 1: List of Products that costs more than $100
USE WideWorldImporters;
SELECT TOP 7 StockItemID,
       StockItemName,
       UnitPrice
FROM Warehouse.StockItems
WHERE UnitPrice > (
      SELECT AVG(UnitPrice)
      FROM Warehouse.StockItems
);
-- Shows products whose UnitPrice is greater than $100.

--Output
--|StockItemID|StockItemName|UnitPrice|
--|-----------|-------------|---------|
--|8|USB food flash drive - dim sum 10 drive variety pack|240.00|
--|15|USB food flash drive - dessert 10 drive variety pack|240.00|
--|66|RC big wheel monster truck with remote control (Black) 1/50 scale|45.00|
--|67|Ride on toy sedan car (Black) 1/12 scale|230.00|
--|68|Ride on toy sedan car (Red) 1/12 scale|230.00|
--|69|Ride on toy sedan car (Blue) 1/12 scale|230.00|
--|70|Ride on toy sedan car (Green) 1/12 scale|230.00|


--Proposition 2: Most recent 5 orders between 2015â€“2016
USE WideWorldImporters;
SELECT TOP 5 o.OrderID,
       o.CustomerID,
       o.OrderDate
FROM (
      SELECT OrderID, CustomerID, OrderDate
      FROM Sales.Orders
      WHERE OrderDate BETWEEN '2015-01-01' AND '2016-12-31'
     ) AS o
ORDER BY o.OrderDate DESC;
-- Retrieves the newest 5 orders placed in 2015â€“2016.

--Output
--|OrderID|CustomerID|OrderDate|
--|-------|----------|---------|
--|73506|596|2016-05-31|
--|73507|35|2016-05-31|
--|73508|925|2016-05-31|
--|73509|937|2016-05-31|
--|73510|900|2016-05-31|


--Proposition 3: Products starting with 'A' (first 5 by StockItemID)
USE WideWorldImporters;

SELECT TOP 7
       s.StockItemID,
       s.StockItemName,
       s.SupplierID,
       (
          SELECT COUNT(*)
          FROM Warehouse.StockItems AS s2
          WHERE s2.SupplierID = s.SupplierID
            AND s2.StockItemName LIKE 'A%'
       ) AS ItemsStartingWithA_BySameSupplier
FROM Warehouse.StockItems AS s
WHERE s.StockItemName LIKE 'A%'-- Only include products whose names begin with the letter 'A'
ORDER BY s.StockItemID ASC;-- oldest first among matching products
-- Filters products whose names start with 'A'

--output
--|StockItemID|StockItemName|SupplierID|ItemsStartingWithA_BySameSupplier|
--|-----------|-------------|----------|---------------------------------|
--|102|Alien officer hoodie (Black) XL|4|9|
--|103|Alien officer hoodie (Black) XXL|4|9|
--|104|Alien officer hoodie (Black) 3XL|4|9|
--|105|Alien officer hoodie (Black) 4XL|4|9|
--|106|Alien officer hoodie (Black) 5XL|4|9|
--|134|Animal with big feet slippers (Brown) S|4|9|
--|135|Animal with big feet slippers (Brown) M|4|9|


--Proposition 4: Return all products whose unit price is greater than at least one productâ€™s unit price from Stock Group 3.
USE WideWorldImporters;

SELECT TOP 8 si.StockItemID AS ProductID,
       si.StockItemName AS ProductName,
       si.UnitPrice
FROM Warehouse.StockItems AS si
WHERE si.UnitPrice > ANY (
    SELECT si2.UnitPrice
    FROM Warehouse.StockItems AS si2
    INNER JOIN Warehouse.StockItemStockGroups AS ssg
        ON si2.StockItemID = ssg.StockItemID
    WHERE ssg.StockGroupID = 3
);

--Output
--|ProductID|ProductName|UnitPrice|
--|---------|-----------|---------|
--|1|USB missile launcher (Green)|25.00|
--|2|USB rocket launcher (Gray)|25.00|
--|3|Office cube periscope (Black)|18.50|
--|4|USB food flash drive - sushi roll|32.00|
--|5|USB food flash drive - hamburger|32.00|
--|6|USB food flash drive - hot dog|32.00|
--|7|USB food flash drive - pizza slice|32.00|
--|8|USB food flash drive - dim sum 10 drive variety pack|240.00|


--Proposition 5: Most recent order date for each customer
USE WideWorldImporters;

SELECT TOP 7 C.CustomerID, C.CustomerName,
       (SELECT MAX(O.OrderDate)
        FROM Sales.Orders AS O
        WHERE O.CustomerID = C.CustomerID) AS LatestOrderDate
FROM Sales.Customers AS C;
/*For each customer, this query finds the most recent (latest) order date 
  by using a subquery that looks up the maximum OrderDate in the Orders table.*/

--Output
--|CustomerID|CustomerName|LatestOrderDate|
--|----------|------------|---------------|
--|1|Tailspin Toys (Head Office)|2016-05-27|
--|2|Tailspin Toys (Sylvanite, MT)|2016-05-14|
--|3|Tailspin Toys (Peeples Valley, AZ)|2016-05-30|
--|4|Tailspin Toys (Medicine Lodge, KS)|2016-04-28|
--|5|Tailspin Toys (Gasport, NY)|2016-05-28|
--|6|Tailspin Toys (Jessie, ND)|2016-05-31|
--|7|Tailspin Toys (Frankewing, TN)|2016-05-27|



--Proposition 6: Top 5 selling products by total quantity sold
USE WideWorldImporters;

SELECT TOP 7
       dt.StockItemID,
       si.StockItemName,
       dt.TotalSold
FROM (
        -- Derived table: compute total sold quantity per product
        SELECT ol.StockItemID,
               SUM(ol.Quantity) AS TotalSold
        FROM Sales.OrderLines AS ol
        GROUP BY ol.StockItemID
     ) AS dt
JOIN Warehouse.StockItems AS si
     ON dt.StockItemID = si.StockItemID
ORDER BY dt.TotalSold DESC;
-- Finds the 5 most sold products based on total quantity ordered.

--Output
--|StockItemID|StockItemName|TotalSold|
--|-----------|-------------|---------|
--|191|Black and orange fragile despatch tape 48mmx75m|207324|
--|192|Black and orange fragile despatch tape 48mmx100m|193680|
--|189|Clear packaging tape 48mmx75m|158626|
--|188|3 kg Courier post bag (White) 300x190x95mm|152375|
--|185|Shipping carton (Brown) 356x356x279mm|152125|
--|184|Shipping carton (Brown) 305x305x305mm|151875|
--|187|Express post box 5kg (White) 350x280x130mm|149825|


--Proposition 7: 5 most recent orders
USE WideWorldImporters;

-- 5 most recent orders using a Common Table Expression
WITH OrderedCTE AS (
    SELECT 
        OrderID,
        CustomerID,
        OrderDate,
        ROW_NUMBER() OVER (ORDER BY OrderDate DESC) AS RowNum
    FROM Sales.Orders
)
SELECT 
    OrderID,
    CustomerID,
    OrderDate
FROM OrderedCTE
WHERE RowNum <= 5
ORDER BY OrderDate DESC;-- newest orders first
-- Returns the latest 5 orders from the system.

--Output
--|OrderID|CustomerID|OrderDate|
--|-------|----------|---------|
--|73506|596|2016-05-31|
--|73507|35|2016-05-31|
--|73508|925|2016-05-31|
--|73509|937|2016-05-31|
--|73510|900|2016-05-31|


--Proposition 8: Total order amount per customer (top 5)
-- ðŸ”¹ Change this value to return different counts (e.g., 5, 10, 20)
DECLARE @TopN INT = 5;

-- ðŸ”¹ Call the function and join to get customer names
SELECT 
    c.CustomerID,
    c.CustomerName,
    t.TotalAmount
FROM Sales.fn_TopCustomerTotals(@TopN) AS t
JOIN Sales.Customers AS c
     ON c.CustomerID = t.CustomerID
ORDER BY t.TotalAmount DESC;-- Highest spenders first
-- Calculates which customers spent the most money in total.

--Output
--|CustomerID|CustomerName|TotalAmount|
--|----------|------------|-----------|
--|149|Tailspin Toys (Inguadona, MN)|384393.35|
--|132|Tailspin Toys (Minidoka, ID)|379660.70|
--|977|Mauno Laurila|377189.80|
--|580|Wingtip Toys (Sarversville, PA)|372350.00|
--|964|Ingrida Zeltina|368067.45|


--Proposition 9: Customers spending more than $50,000 ()
USE WideWorldImporters;

-- Using Common Table Expression (CTE)
WITH CustomerTotals AS (
    SELECT 
        o.CustomerID,
        SUM(ol.Quantity * ol.UnitPrice) AS TotalSpent,
        MAX(o.OrderDate) AS MostRecentOrder
    FROM Sales.Orders AS o
    JOIN Sales.OrderLines AS ol 
         ON o.OrderID = ol.OrderID
    GROUP BY o.CustomerID
)
SELECT TOP 7
       c.CustomerID,
       c.CustomerName,
       ct.TotalSpent,
       ct.MostRecentOrder
FROM CustomerTotals AS ct
JOIN Sales.Customers AS c
     ON c.CustomerID = ct.CustomerID
WHERE ct.TotalSpent > 50000
ORDER BY ct.MostRecentOrder DESC;
-- Filters customers who spent over $50k and shows their last order date.

--Output
--|CustomerID|CustomerName|TotalSpent|MostRecentOrder|
--|----------|------------|----------|---------------|
--|11|Tailspin Toys (Devault, PA)|314352.80|2016-05-31|
--|35|Tailspin Toys (Slanesville, WV)|295095.40|2016-05-31|
--|6|Tailspin Toys (Jessie, ND)|266529.60|2016-05-31|
--|76|Tailspin Toys (Yewed, OK)|241998.20|2016-05-31|
--|29|Tailspin Toys (Eulaton, AL)|251220.20|2016-05-31|
--|64|Tailspin Toys (Hodgdon, ME)|278611.50|2016-05-31|
--|28|Tailspin Toys (North Ridge, NY)|302536.75|2016-05-31|


--Proposition 10: Categorize products by price
-- (Pick 5 specific products to show Cheap, Moderate, and Expensive)
USE WideWorldImporters;

-- Using Common Table Expression (CTE)
WITH ProductCategories AS
(
    SELECT 
        StockItemID,
        StockItemName,
        UnitPrice,
        CASE 
            WHEN UnitPrice < 10 THEN 'Cheap'
            WHEN UnitPrice BETWEEN 10 AND 100 THEN 'Moderate'
            ELSE 'Expensive'
        END AS PriceCategory
    FROM Warehouse.StockItems
    WHERE StockItemID IN (1, 3, 8, 177, 206)  -- pick specific products
)
SELECT 
    StockItemID,
    StockItemName,
    UnitPrice,
    PriceCategory
FROM ProductCategories
ORDER BY StockItemID;
-- Groups products as Cheap, Moderate, or Expensive using CASE.

--Output
--|StockItemID|StockItemName|UnitPrice|PriceCategory|
--|-----------|-------------|---------|-------------|
--|1|USB missile launcher (Green)|25.00|Moderate|
--|3|Office cube periscope (Black)|18.50|Moderate|
--|8|USB food flash drive - dim sum 10 drive variety pack|240.00|Expensive|
--|177|Shipping carton (Brown) 413x285x187mm|1.05|Cheap|
--|206|Permanent marker black 5mm nib (Black) 5mm|2.70|Cheap|











